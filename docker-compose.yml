version: '3.8'
services:
  mysql:
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --binlog-expire-logs-seconds=259200
    restart: always
    volumes:
      - ./data/mysql/:/var/lib/mysql/
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      TZ: Asia/Shanghai # 指定时区
      MYSQL_ROOT_PASSWORD: "123456" # 配置root用户密码
      MYSQL_DATABASE: "cool" # 业务库名
      MYSQL_USER: "cool" # 业务库用户名
      MYSQL_PASSWORD: "123123" # 业务库密码
    ports:
      - "3306:3306"

  redis:
    image: redis
    # command: --requirepass "12345678" # redis库密码,不需要密码注释本行
    restart: always
    environment:
      TZ: Asia/Shanghai # 指定时区
    volumes:
      - ./data/redis/:/data/
    ports:
      - "6379:6379"

  chatgpt-share-server:
    image: xyhelper/chatgpt-share-server:latest
    restart: always
    ports:
      - 9300:8001
    environment:
      TZ: Asia/Shanghai # 指定时区
      # 接入网关地址
      CHATPROXY: "https://xxx.xxx.xxx" # 网关记得更换
      # 接入网关的authkey
      AUTHKEY: "xyhelper"
      # 内容审核及速率限制
      AUDIT_LIMIT_URL: "http://chatgpt-share-server-expander:8888/auditLimit"
      OAUTH_URL: https://xxx.xxx.xxx/api/user/oauth # 请把xxx的地方更换为自己的域名
      APIAUTH: expander  # 该值为演示，请填写复杂度高的值，字母数字大小写均可
    volumes:
      - ./config-chatgpt.yaml:/app/config.yaml
      - ./data/chatgpt-share-server/:/app/data/
      - ./list.js:/app/resource/public/list.js
    labels:
      - "com.centurylinklabs.watchtower.scope=xyhelper-chatgpt-share-server"
 

  chatgpt-share-server-expander:
    image: seven222/chatgpt-share-server-expander-plus
    restart: always
    ports:
      - "9400:8888"
  
    environment:
      TZ: Asia/Shanghai
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/cool?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&zeroDateTimeBehavior=convertToNull
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: "" # 如果Redis没有设置密码，保持为空
      O1_PREVIEW_LIMIT: 30 #o1-preview模型限制次数，填写0则不限制
      O1_PREVIEW_PER: 1w # o1-preview模型限制周期 请填写1s,1m,1h,1d,1w,1M,1y的形式
      O1_MINI_LIMIT: 50 #o1-mini模型限制次数，填写0则不限制
      O1_MINI_PER: 1d # o1-mini模型限制周期 请填写1s,1m,1h,1d,1w,1M,1y的形式
      O1_PRO_LIMIT: 20 #o1-pro模型限制次数
      O1_PRO_PER: 1d # o1-pro模型限制周期 请填写1s（秒）,1m（分钟）,1h（小时）,1d（一天）,1w（一周）,1M（一个月）,1y（一年）的形式
      APIAUTH: expander  # 该值为演示，请填写复杂度高的值，字母数字大小写均可，与上面的APIAUTH值要一致
    volumes:
      - ./data/chatgpt-share-server-expander/data/:/app/data/

  grok-share-server:
    image: lyy0709/grok-share-server:dev
    restart: always
    ports:
      - 9500:8001
    environment:
      TZ: Asia/Shanghai # 指定时区
      PROXY_URL: "http://proxy:8080/proxy" # 代理服务地址,支持http和https，socks5，没有则留空默认走本地
      ORIGIN: "http://localhost:8302" # 本服务地址，如你的页面为https://xxx.com，这里就填写https://xxx.com
      CHATPROXY: "http://chatproxy:8080/proxy" # 网关配置，留空则不使用网关走本地代理
    volumes:
      - ./config-grok.yaml:/app/config.yaml
      - ./data/grok-share-server/:/app/data/


  dddd-share-server:
    image: lyy0709/dddd-share-server:dev
    restart: always
    ports:
      - 9600:8001
    environment:
      TZ: Asia/Shanghai # 指定时区
      PROXY_URL: "http://proxy:8080/proxy" # 代理服务地址,支持http和https，socks5，没有则留空默认走本地
      ORIGIN: "http://localhost:8303" # 本服务地址，如你的页面为https://xxx.com，这里就填写https://xxx.com
      CHATPROXY: "https://chatproxy.com"
    volumes:
      - ./config-claude.yaml:/app/config.yaml
      - ./data/dddd-share-server/:/app/data/
   

